name: CICD for kustomized oevrlays

on:
  pull_request: { branches: ["*"] }
  push:
    branches:
      - main
    paths:
      - 'app/**'      

permissions:          # github actions permissions to access the repository and the registry 
  contents: read     
  packages: write

env:
  Registry: ghcr.io
  ImageRepo: memor24/kk-images

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.Registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: build and push Docker image
        run: |
          docker build -t my-app:latest . 
          docker tag my-app:latest ${{ env.Registry }}/${{ env.ImageRepo }}/my-app:${{ BUILD_NUMBER }} 
          docker push ${{ env.Registry }}/${{ env.ImageRepo }}/my-app:${{ BUILD_NuMBER }}

      - name: install KinD
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: create KinD cluster
        run: |
          kind create cluster --name my-cluster --config ./kind-config.yaml
          kubectl wait --for=condition=Ready nodes --all --timeout=180s

      - name: config kubectl to use the KinD cluster
        run: |
          kubectl cluster-info --context kind-my-cluster
          kubectl config use-context kind-my-cluster
          kubectl create namespace dev-ns 
          kubectl create rolebinding default-admin \
          --clusterrole=admin \
          --serviceaccount=dev-ns:default \
          --namespace=dev-ns
          kubectl create namespace staging-ns \
          kubectl create rolebinding default-admin \
          --clusterrole=admin \
          --serviceaccount=staging-ns:default \
          --namespace=staging-ns


      - name : create regcred kubernetes secret for kubectl acccess to ghcr
        run: |
          kubectl create secret docker-registry regcred \
          --docker-server=ghcr.io \
          --docker-username=${{ github.actor }} \
          --docker-password=${{ secrets.GITHUB_TOKEN }} \
          --docker-email=${{ github.actor }}@sth.co \
          --dry-run=client -o yaml | kubectl apply -f -

      - name: build and deploy to dev
        run: | 
          echo "building & deploying to dev"
          envsub < overlays/dev/kustomization.yml > overlays/dev/kustomization-tmp.yml
          kustomize build overlays/dev -f overlays/dev/kustomization-tmp.yml | kubectl apply -f -
          env: 
            BUILD_NUMBER: ${{ github.run_number }}

      - name: build and deploy to staging
        run: |
          echo "building & deploying to the staging environment"
          envsub < overlays/stage/kustomization.yml > overlays/stage/kustomization-tmp.yml
          kustomize build overlays/stage -f overlays/stage/kustomization-tmp.yml| kubectl apply -f -
          env: 
            BUILD_NUMBER: ${{ github.run_number }}
        